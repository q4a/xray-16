name: CI

on: [push, pull_request]

jobs:
  build-linux-arm:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        Configuration: [Release, Debug]
        Platform: [armv7, aarch64]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup
      run: |
        git submodule update --init --recursive
        git submodule deinit Externals/cryptopp
    - name: Build
      uses: uraimo/run-on-arch-action@v2.0.8
      with:
        architecture: ${{ matrix.Platform }}
        distribution: ubuntu20.04
        run: |
          cat /etc/apt/sources.list
          apt-get update && apt-get install -y software-properties-common && add-apt-repository -y ppa:ubuntu-toolchain-r/test
          apt-get install -y libglew-dev libegl1-mesa-dev libgles2-mesa-dev libopenal-dev libtbb-dev libcrypto++-dev liblockfile-dev libfreeimage-dev libfreeimageplus-dev
          apt-get install -y gcc-9 g++-9 cmake liblua5.1-0-dev libssl-dev libogg-dev libtheora-dev libvorbis-dev liblzo2-dev libjpeg-dev libncurses5-dev libsdl2-dev
          export CC=gcc-9 && export CXX=g++-9 && ${CXX} --version
          export core_count=$(nproc || echo 4) && echo core_count = $core_count
          mkdir bin && cd bin
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.Configuration }}
          make -j $core_count package
          file openxray_1.6.02_*.deb
    - name: Prepare artifacts
      run: |
        if [ "${{ matrix.Platform }}" = "aarch64" ]; then
        echo ::set-env name=Build_type::arm64
        elif [ "${{ matrix.Platform }}" = "armv7" ]; then
        echo ::set-env name=Build_type::armhf
        fi
    - name: Upload OpenXRay artifact
      uses: actions/upload-artifact@v1
      with:
        name: openxray_1.6.02_${{ matrix.Configuration }}_${{ env.Build_type }}.deb
        path: bin/openxray_1.6.02_${{ env.Build_type }}.deb